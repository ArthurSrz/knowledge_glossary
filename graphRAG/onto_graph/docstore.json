{"docstore/metadata": {"9def6900-c031-4257-af02-3ab70b17f9aa": {"doc_hash": "ed6f2c3728d9bbfa382372794450b2a22fead771a889e07e47162aa911e6ad3e"}, "ca4a34e8-7d86-4a3a-a0f5-7e3972b3adb7": {"doc_hash": "11b6016bc891a731b6a55bc589a0f2f96454d136b22fb878b9f868a8ec4709aa"}, "1dfbb961-0631-41b4-9e43-3101d2b2be41": {"doc_hash": "65c65f75bec6dd286d08c0ce8a3e1759481bffb59aba2ac4a68dd63b7bcc3020"}, "b64da713-83fa-4a00-8f2c-18a4031349dd": {"doc_hash": "8c9c3899143a85e9e1efd655c65d9f6af518d6c482e4163ac0532d9c2606f394"}, "a148e0bc-eb44-45b6-bbe3-bf490cf99ef2": {"doc_hash": "10c57712f6a497f1a57a5b98abd9671a52768ccf3fb023cb455c918e70d122c6"}, "6cf7e4f0-3d46-457b-85a5-634117271e27": {"doc_hash": "5590512aa1246649509b17394ef8ab4a6e7ecd900c7c8720c9a2f544be4f0896"}, "52b6707f-676f-4ab8-a988-99ed25444dc6": {"doc_hash": "695b20e5de9d98a44ace5ac37800b895b4e62ea7c4303fef2911fe7e7c2f688f"}, "37ab77dc-ecc0-4223-ba79-3c6b26d2d6c7": {"doc_hash": "6d47c16abde8d0a5baee05c3af572cbfbc5d07cec5489a3c0e3688c94c538855"}, "ad3a9d03-0edf-424d-9fbb-3ff28afd3904": {"doc_hash": "d6e89b2203c28ffc32cd7bddf0bc17d99b7978789ac6fc9a5b3616a6d4a3aee6"}, "cdd5533d-2a95-475d-8da6-3f2b996467cf": {"doc_hash": "f3621e3df22c43f37524a26d20b04d7370eb6ec1eccdd944797e649d3cec1cd1"}, "4454233d-dd95-4d80-88ec-166178f0c08b": {"doc_hash": "06bb48326528fbfa6800a0b36faad8f10182bcb1801df4652fcc6e7d65520e8b"}, "bc1f74e7-0eb5-4e58-af60-a163f87576f6": {"doc_hash": "614aeaae92043c5da5d4d8e8f7e4f13314c0dcc02f15ebb432ef8e8076cc05e5"}, "b980e946-2ece-4dd9-a638-1db25b7c478d": {"doc_hash": "dd6f3e363ecb8a7f77eee0d22dd9be90e2e4bba5becf6d1ec34b7914eacd5e7d"}, "6cbd12d0-7410-4f07-b1aa-557340a9756c": {"doc_hash": "a7bcbbe4fe2f6a322291b679de3770a09f4c4bc7d5ee44a8069cacd304c18473"}, "f4afc87c-14f5-468f-a69b-87d506a6dcf5": {"doc_hash": "da79657a921424edaf31cdd5ce502063c008b25672604343cbad955571306feb"}, "dd517c12-fd71-47ef-ac22-227fc739ba76": {"doc_hash": "6be38e04ee2ec3d8e7131c10cb96072f68b0f6c4c5b28cc21d2bd40a59f52b43", "ref_doc_id": "9def6900-c031-4257-af02-3ab70b17f9aa"}, "2c6cd875-1a42-4f63-aeb1-38b7b3f6a297": {"doc_hash": "e6cd76d0c3bb4c8515733bc58b3479f83ce4796fe93642b3e743be13ee18be9c", "ref_doc_id": "ca4a34e8-7d86-4a3a-a0f5-7e3972b3adb7"}, "4170752e-f9d7-4221-8fc8-e3f83bc8233e": {"doc_hash": "15d638ca7d8a661cba5e03a9f7c61b2db92048cecc5bcebce0ebe91e47e1dfa7", "ref_doc_id": "1dfbb961-0631-41b4-9e43-3101d2b2be41"}, "6920cc05-6c06-4af8-b51e-1fcde5e8a683": {"doc_hash": "347bd09fd102bb699ed52258b83b02cba4322a53280d8fd2a6359c907235f4bc", "ref_doc_id": "b64da713-83fa-4a00-8f2c-18a4031349dd"}, "4106b283-11bb-4c31-84a7-1a732f5b6074": {"doc_hash": "5d9fe66f131f0ab52e67e954068fd749d8fd25804a6dc24297bb52a7c04b814c", "ref_doc_id": "b64da713-83fa-4a00-8f2c-18a4031349dd"}, "eccb786f-57b7-4575-a142-284c5517fc8c": {"doc_hash": "b2d4487000aa8f13408b2709ecd0dd0328540c4733e714a0fa2537b5b63d21f3", "ref_doc_id": "b64da713-83fa-4a00-8f2c-18a4031349dd"}, "8c7cc1d5-7410-4c0b-a6ee-4554049edda2": {"doc_hash": "d91c04b9cab65d320b2a867d68375b2fda7b9a99e21a444a28af493b78531767", "ref_doc_id": "b64da713-83fa-4a00-8f2c-18a4031349dd"}, "bb4207ee-40d6-477f-9ac6-176cb76faf72": {"doc_hash": "f8858136ef8a5a24db59b721ef69552165f5c418e29d7ee1ccd01a9e0d3dc467", "ref_doc_id": "b64da713-83fa-4a00-8f2c-18a4031349dd"}, "a30dbdf8-fb3a-46a5-a2f4-ea6db1fe35a9": {"doc_hash": "09d42ea3c950b29ec64888c7db707c5be86c42f0de30210f9ac21fbb742652ac", "ref_doc_id": "a148e0bc-eb44-45b6-bbe3-bf490cf99ef2"}, "f3ec63f2-8bf9-44ae-b9ff-cc800686d3b8": {"doc_hash": "812de192794d96bee813587842e0340b3b4a17631234cef8e203ba13bc686e87", "ref_doc_id": "6cf7e4f0-3d46-457b-85a5-634117271e27"}, "fc7872c0-94c3-453e-aa77-4c6c13f7b2a6": {"doc_hash": "0def5873dd7004ace39cbfc2bca780bb5a093d723acbd486fe97323867649c19", "ref_doc_id": "52b6707f-676f-4ab8-a988-99ed25444dc6"}, "9ff751c1-34e4-413e-beba-8dd89d2aa591": {"doc_hash": "0fd5f4fc67432ca2140ab6fc1ed31930ba041998705ec9cd665bd288fe45bc22", "ref_doc_id": "37ab77dc-ecc0-4223-ba79-3c6b26d2d6c7"}, "50a60d26-7adf-4b86-8901-8a07560a68e6": {"doc_hash": "0a2dd4364f5676ad87e2dc468d2e2df779048567a77278715b430351289b2047", "ref_doc_id": "ad3a9d03-0edf-424d-9fbb-3ff28afd3904"}, "f8e57b94-0686-48d1-a2be-c51d09af03ce": {"doc_hash": "3925b662b462a1212c9efd84ce3b5b4ac411636ec3e3f8d97aa274c6c0f1e20d", "ref_doc_id": "cdd5533d-2a95-475d-8da6-3f2b996467cf"}, "e36b419e-407b-44c1-b12b-4c80e8401f26": {"doc_hash": "50d2fe0085932ee98663aae98b9c1ca5ede113a507b3d589271a03c478c50d33", "ref_doc_id": "cdd5533d-2a95-475d-8da6-3f2b996467cf"}, "ee180192-eed6-4ecc-8dce-a7ce32749b3e": {"doc_hash": "65ed19bdd425dbe72caf7217c9f47db282570f89bd6a3f8fbde3ed10002e8256", "ref_doc_id": "cdd5533d-2a95-475d-8da6-3f2b996467cf"}, "2815919f-0bcd-4dc6-9cb7-0b4bf4722d68": {"doc_hash": "5a8e1591dc33cc295ec1e611b8e56ec1ad9c5089e89113512b1426dc6b001378", "ref_doc_id": "4454233d-dd95-4d80-88ec-166178f0c08b"}, "b1478ce3-c754-4c13-bf43-b9876ac533e5": {"doc_hash": "f942c3a4032539e4731a5a81dfd657740b783ee84575f00b672f4d98c01a54a4", "ref_doc_id": "bc1f74e7-0eb5-4e58-af60-a163f87576f6"}, "7948129a-6e1f-42b6-a726-052d605f805b": {"doc_hash": "15b2b0916d1f5fee569ebfed893d579c766ec5ca4c2132eff80af2cc7e6d44dc", "ref_doc_id": "b980e946-2ece-4dd9-a638-1db25b7c478d"}, "a6a71afe-1a69-4536-a8f9-61b00c47c301": {"doc_hash": "89e35603f91a76b313cb85f3041d7aebd910cb1f4809c649d9e10a470b2b9b1c", "ref_doc_id": "6cbd12d0-7410-4f07-b1aa-557340a9756c"}, "600e16a5-57e1-49ed-8b5f-1a89be1a9074": {"doc_hash": "17394b58eed7d2e2f92dda6b2a7853b24dd3a3b14a6e70528a6570d73fad6657", "ref_doc_id": "f4afc87c-14f5-468f-a69b-87d506a6dcf5"}}, "docstore/data": {"dd517c12-fd71-47ef-ac22-227fc739ba76": {"__data__": {"id_": "dd517c12-fd71-47ef-ac22-227fc739ba76", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9def6900-c031-4257-af02-3ab70b17f9aa", "node_type": "4", "metadata": {}, "hash": "ed6f2c3728d9bbfa382372794450b2a22fead771a889e07e47162aa911e6ad3e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nhelpsAchieve: \"[[Transparency 1]]\"\n---\nLocal Interpretable Model-agnostic Explanations (LIME) is a method developed to enhance the explainability and transparency of machine learning models, particularly those that are complex and difficult to interpret. It is designed to provide clear, localized explanations for individual predictions made by any type of machine learning model, whether it's a classifier, regressor, or neural network.\n\nThe core idea of LIME is to approximate the behavior of a complex model with a simpler, more interpretable model in the context of a specific prediction. To achieve this, LIME perturbs the input data by making small adjustments to the input features and observes how these changes influence the model\u2019s predictions. The perturbed inputs, along with their corresponding outputs, form a dataset that is used to build a surrogate model.  \n\u00a0\n\nThis surrogate model, which is typically a simpler model such as linear regression or a decision tree, is trained to focus on the region around the specific instance of interest by weighting data points based on their proximity to the original input. This localized approach allows LIME to accurately capture the decision-making process of the original model in that specific context.  \n\u00a0\n\nBy analyzing the surrogate model, LIME identifies which features were most influential in the original model's prediction, providing a clear and interpretable explanation. This makes LIME a powerful tool for enhancing the transparency of machine learning models, enabling stakeholders to understand and trust the decisions made by these models, especially in critical fields like healthcare, finance, and legal decision-making.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1700, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c6cd875-1a42-4f63-aeb1-38b7b3f6a297": {"__data__": {"id_": "2c6cd875-1a42-4f63-aeb1-38b7b3f6a297", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ca4a34e8-7d86-4a3a-a0f5-7e3972b3adb7", "node_type": "4", "metadata": {}, "hash": "11b6016bc891a731b6a55bc589a0f2f96454d136b22fb878b9f868a8ec4709aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nfollowed by: \"[[cybernetics]]\"\nis the study of:\n  - \"[[feedback]]\"\n  - \"[[dynamical system]]\"\ninstance of:\n  - \"[[systems engineering]]\"\n  - \"[[area of mathematics]]\"\ntopic's main template: \"[[Template_Control theory]]\"\nmaintained by WikiProject: \"[[WikiProject Mathematics]]\"\nsubclass of: \"[[automatic control]]\"\npart of: \"[[calculus of variations, systems theory and control theory]]\"\nStack Exchange tag: https://stackoverflow.com/tags/control-theory\nCommons gallery: Control theory\nCommons category: Control theory\nwikidata entity id: Q6501221\n---\n**Control theory**\u00a0is a field of\u00a0control engineering\u00a0and\u00a0applied mathematics\u00a0that deals with the\u00a0control\u00a0of\u00a0dynamical systems\u00a0in engineered processes and machines. The objective is to develop a model or algorithm governing the application of system inputs to drive the system to a desired state, while minimizing any\u00a0_delay_,\u00a0_overshoot_, or\u00a0_steady-state error_\u00a0and ensuring a level of control\u00a0stability; often with the aim to achieve a degree of\u00a0optimality.\n\nTo do this, a\u00a0**controller**\u00a0with the requisite corrective behavior is required. This controller monitors the controlled\u00a0process variable\u00a0(PV), and compares it with the reference or\u00a0set point \"Setpoint (control system)\")\u00a0(SP). The difference between actual and desired value of the process variable, called the\u00a0_error_\u00a0signal, or SP-PV error, is applied as feedback to generate a control action to bring the controlled process variable to the same value as the set point. Other aspects which are also studied are\u00a0controllability\u00a0and\u00a0observability. Control theory is used in\u00a0control system engineering\u00a0to design automation that have revolutionized manufacturing, aircraft, communications and other industries, and created new fields such as\u00a0robotics.\n\nExtensive use is usually made of a diagrammatic style known as the\u00a0block diagram. In it the\u00a0transfer function, also known as the system function or network function, is a mathematical model of the relation between the input and output based on the\u00a0differential equations\u00a0describing the system.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2060, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4170752e-f9d7-4221-8fc8-e3f83bc8233e": {"__data__": {"id_": "4170752e-f9d7-4221-8fc8-e3f83bc8233e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1dfbb961-0631-41b4-9e43-3101d2b2be41", "node_type": "4", "metadata": {}, "hash": "65c65f75bec6dd286d08c0ce8a3e1759481bffb59aba2ac4a68dd63b7bcc3020", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Open-loop and closed-loop (feedback) control\n\n\n\nFundamentally, there are two types of control loop:\u00a0_open-loop control_\u00a0(feedforward), and\u00a0_closed-loop control_\u00a0(feedback).\n\n- In open-loop control, the control action from the controller is independent of the \"process output\" (or \"controlled process variable\"). A good example of this is a central heating boiler controlled only by a timer, so that heat is applied for a constant time, regardless of the temperature of the building. The control action is the switching on/off of the boiler, but the controlled variable should be the building temperature, but is not because this is open-loop control of the boiler, which does not give closed-loop control of the temperature.\n- In closed loop control, the control action from the controller is dependent on the process output. In the case of the boiler analogy, this would include a thermostat to monitor the building temperature, and thereby feed back a signal to ensure the controller maintains the building at the temperature set on the thermostat. A closed loop controller therefore has a feedback loop which ensures the controller exerts a control action to give a process output the same as the \"reference input\" or \"set point\". For this reason, closed loop controllers are also called feedback controllers.11(#cite_note-Control_loop_auto-11)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1347, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6920cc05-6c06-4af8-b51e-1fcde5e8a683": {"__data__": {"id_": "6920cc05-6c06-4af8-b51e-1fcde5e8a683", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b64da713-83fa-4a00-8f2c-18a4031349dd", "node_type": "4", "metadata": {}, "hash": "8c9c3899143a85e9e1efd655c65d9f6af518d6c482e4163ac0532d9c2606f394", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4106b283-11bb-4c31-84a7-1a732f5b6074", "node_type": "1", "metadata": {}, "hash": "5d9fe66f131f0ab52e67e954068fd749d8fd25804a6dc24297bb52a7c04b814c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Important design decisions : \n\n* cloud  VS. edge based \n* offline VS. online learning \n* batch VS.online predictions \n\nModern machine learning systems span a spectrum of deployment options, each with its own set of characteristics and use cases. At one end, we have cloud-based ML, which leverages powerful centralized computing resources for complex, data-intensive tasks. Moving along the spectrum, we encounter edge ML, which brings computation closer to the data source for reduced latency and improved privacy. Mobile ML further extends these capabilities to smartphones and tablets, while at the far end, we find Tiny ML, which enables machine learning on extremely low-power devices with severe memory and processing constraints.\n\nThis spectrum of deployment can be visualized like Earth\u2019s geological features, each operating at different scales in our computational landscape. Cloud ML systems operate like continents, processing vast amounts of data across interconnected centers; Edge ML exists where these continental powers meet the sea, creating dynamic coastlines where computation flows into local waters; Mobile ML moves through these waters like ocean currents, carrying computing power across the digital seas; and where these currents meet the physical world, TinyML systems rise like islands, each a precise point of intelligence in the vast computational ocean.\n\nFigure\u00a02.1\u00a0illustrates the spectrum of distributed intelligence across these approaches, providing a visual comparison of their characteristics. We will examine the unique characteristics, advantages, and challenges of each approach, as depicted in the figure. Additionally, we will discuss the emerging trends and technologies that are shaping the future of machine learning deployment, considering how they might influence the balance between these three paradigms.\n\n![](https://mlsysbook.ai/contents/core/ml_systems/images/png/cloud-edge-tiny.png \"Figure\u00a02.1: Cloud vs.\u00a0Edge vs.\u00a0Mobile vs.\u00a0Tiny ML: The Spectrum of Distributed Intelligence. Source: ABI Research \u2013 Tiny ML.\")\n\nFigure\u00a02.1: Cloud vs.\u00a0Edge vs.\u00a0Mobile vs.\u00a0Tiny ML: The Spectrum of Distributed Intelligence. Source: ABI Research \u2013 Tiny ML.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2187, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4106b283-11bb-4c31-84a7-1a732f5b6074": {"__data__": {"id_": "4106b283-11bb-4c31-84a7-1a732f5b6074", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b64da713-83fa-4a00-8f2c-18a4031349dd", "node_type": "4", "metadata": {}, "hash": "8c9c3899143a85e9e1efd655c65d9f6af518d6c482e4163ac0532d9c2606f394", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6920cc05-6c06-4af8-b51e-1fcde5e8a683", "node_type": "1", "metadata": {}, "hash": "347bd09fd102bb699ed52258b83b02cba4322a53280d8fd2a6359c907235f4bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eccb786f-57b7-4575-a142-284c5517fc8c", "node_type": "1", "metadata": {}, "hash": "b2d4487000aa8f13408b2709ecd0dd0328540c4733e714a0fa2537b5b63d21f3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To better understand the dramatic differences between these ML deployment options,\u00a0Table\u00a02.1\u00a0provides examples of representative hardware platforms for each category. These examples illustrate the vast range of computational resources, power requirements, and cost considerations across the ML systems spectrum. As we explore each paradigm in detail, you can refer back to these concrete examples to better understand the practical implications of each approach.\n\nTable\u00a02.1: Representative hardware platforms across the ML systems spectrum, showing typical specifications and capabilities for each category.\n\n|Category|Example Device|Processor|Memory|Storage|Power|Price Range|Example Models/Tasks|\n|---|---|---|---|---|---|---|---|\n|Cloud ML|NVIDIA DGX A100|8x NVIDIA A100 GPUs (40 GB/80 GB)|1 TB System RAM|15 TB NVMe SSD|6.5 kW|$200 K+|Large language models (GPT-3), real-time video processing|\n||Google TPU v4 Pod|4096 TPU v4 chips|128 TB+|Networked storage|~MW|Pay-per-use|Training foundation models, large-scale ML research|\n|Edge ML|NVIDIA Jetson AGX Orin|12-core Arm\u00ae Cortex\u00ae-A78AE, NVIDIA Ampere GPU|32 GB LPDDR5|64GB eMMC|15-60 W|$899|Computer vision, robotics, autonomous systems|\n||Intel NUC 12 Pro|Intel Core i7-1260P, Intel Iris Xe|32 GB DDR4|1 TB SSD|28 W|$750|Edge AI servers, industrial automation|\n|Mobile ML|iPhone 15 Pro|A17 Pro (6-core CPU, 6-core GPU)|8 GB RAM|128 GB-1 TB|3-5 W|$999+|Face ID, computational photography, voice recognition|\n|Tiny ML|Arduino Nano 33 BLE Sense|Arm Cortex-M4 @ 64 MHz|256 KB RAM|1 MB Flash|0.02-0.04 W|$35|Gesture recognition, voice detection|\n||ESP32-CAM|Dual-core @ 240MHz|520 KB RAM|4 MB Flash|0.05-0.25 W|$10|Image classification, motion detection|\n\n\n\nThe evolution of machine learning systems can be seen as a progression from centralized to increasingly distributed and specialized computing paradigms:\n\n**Cloud ML**: Initially, ML was predominantly cloud-based.", "mimetype": "text/plain", "start_char_idx": 2191, "end_char_idx": 4111, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eccb786f-57b7-4575-a142-284c5517fc8c": {"__data__": {"id_": "eccb786f-57b7-4575-a142-284c5517fc8c", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b64da713-83fa-4a00-8f2c-18a4031349dd", "node_type": "4", "metadata": {}, "hash": "8c9c3899143a85e9e1efd655c65d9f6af518d6c482e4163ac0532d9c2606f394", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4106b283-11bb-4c31-84a7-1a732f5b6074", "node_type": "1", "metadata": {}, "hash": "5d9fe66f131f0ab52e67e954068fd749d8fd25804a6dc24297bb52a7c04b814c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c7cc1d5-7410-4c0b-a6ee-4554049edda2", "node_type": "1", "metadata": {}, "hash": "d91c04b9cab65d320b2a867d68375b2fda7b9a99e21a444a28af493b78531767", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "The evolution of machine learning systems can be seen as a progression from centralized to increasingly distributed and specialized computing paradigms:\n\n**Cloud ML**: Initially, ML was predominantly cloud-based. Powerful, scalable servers in data centers are used to train and run large ML models. This approach leverages vast computational resources and storage capacities, enabling the development of complex models trained on massive datasets. Cloud ML excels at tasks requiring extensive processing power, distributed training of large models, and is ideal for applications where real-time responsiveness isn\u2019t critical. Popular platforms like AWS SageMaker, Google Cloud AI, and Azure ML offer flexible, scalable solutions for model development, training, and deployment. Cloud ML can handle models with billions of parameters, training on petabytes of data, but may incur latencies of 100-500 ms for online inference due to network delays.\n\n**Edge ML**: As the need for real-time, low-latency processing grew, Edge ML emerged. This paradigm brings inference capabilities closer to the data source, typically on edge devices such as industrial gateways, smart cameras, autonomous vehicles, or IoT hubs. Edge ML reduces latency (often to less than 50 ms), enhances privacy by keeping data local, and can operate with intermittent cloud connectivity. It\u2019s particularly useful for applications requiring quick responses or handling sensitive data in industrial or enterprise settings. Frameworks like NVIDIA Jetson or Google\u2019s Edge TPU enable powerful ML capabilities on edge devices. Edge ML plays a crucial role in IoT ecosystems, enabling real-time decision making and reducing bandwidth usage by processing data locally.\n\n**Mobile ML**: Building on edge computing concepts, Mobile ML focuses on leveraging the computational capabilities of smartphones and tablets. This approach enables personalized, responsive applications while reducing reliance on constant network connectivity. Mobile ML offers a balance between the power of edge computing and the ubiquity of personal devices. It utilizes on-device sensors (e.g., cameras, GPS, accelerometers) for unique ML applications. Frameworks like TensorFlow Lite and Core ML allow developers to deploy optimized models on mobile devices, with inference times often under 30 ms for common tasks. Mobile ML enhances privacy by keeping personal data on the device and can operate offline, but must balance model performance with device resource constraints (typically 4-8 GB RAM, 100-200 GB storage).\n\n**Tiny ML**: The latest development in this progression is Tiny ML, which enables ML models to run on extremely resource-constrained microcontrollers and small embedded systems.", "mimetype": "text/plain", "start_char_idx": 3899, "end_char_idx": 6630, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c7cc1d5-7410-4c0b-a6ee-4554049edda2": {"__data__": {"id_": "8c7cc1d5-7410-4c0b-a6ee-4554049edda2", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b64da713-83fa-4a00-8f2c-18a4031349dd", "node_type": "4", "metadata": {}, "hash": "8c9c3899143a85e9e1efd655c65d9f6af518d6c482e4163ac0532d9c2606f394", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eccb786f-57b7-4575-a142-284c5517fc8c", "node_type": "1", "metadata": {}, "hash": "b2d4487000aa8f13408b2709ecd0dd0328540c4733e714a0fa2537b5b63d21f3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bb4207ee-40d6-477f-9ac6-176cb76faf72", "node_type": "1", "metadata": {}, "hash": "f8858136ef8a5a24db59b721ef69552165f5c418e29d7ee1ccd01a9e0d3dc467", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "**Mobile ML**: Building on edge computing concepts, Mobile ML focuses on leveraging the computational capabilities of smartphones and tablets. This approach enables personalized, responsive applications while reducing reliance on constant network connectivity. Mobile ML offers a balance between the power of edge computing and the ubiquity of personal devices. It utilizes on-device sensors (e.g., cameras, GPS, accelerometers) for unique ML applications. Frameworks like TensorFlow Lite and Core ML allow developers to deploy optimized models on mobile devices, with inference times often under 30 ms for common tasks. Mobile ML enhances privacy by keeping personal data on the device and can operate offline, but must balance model performance with device resource constraints (typically 4-8 GB RAM, 100-200 GB storage).\n\n**Tiny ML**: The latest development in this progression is Tiny ML, which enables ML models to run on extremely resource-constrained microcontrollers and small embedded systems. Tiny ML allows for on-device inference without relying on connectivity to the cloud, edge, or even the processing power of mobile devices. This approach is crucial for applications where size, power consumption, and cost are critical factors. Tiny ML devices typically operate with less than 1 MB of RAM and flash memory, consuming only milliwatts of power, enabling battery life of months or years. Applications include wake word detection, gesture recognition, and predictive maintenance in industrial settings. Platforms like Arduino Nano 33 BLE Sense and STM32 microcontrollers, coupled with frameworks like TensorFlow Lite for Microcontrollers, enable ML on these tiny devices. However, Tiny ML requires significant model optimization and quantization1\u00a0to fit within these constraints.\n\n1\u00a0**Quantization**: Process of reducing the numerical precision of ML model parameters to reduce memory footprint and computational demand.\n\nEach of these paradigms has its own strengths and is suited to different use cases:\n\n- Cloud ML remains essential for tasks requiring massive computational power or large-scale data analysis.\n- Edge ML is ideal for applications needing low-latency responses or local data processing in industrial or enterprise environments.\n- Mobile ML is suited for personalized, responsive applications on smartphones and tablets.\n- Tiny ML enables AI capabilities in small, power-efficient devices, expanding the reach of ML to new domains.\n\nThis progression reflects a broader trend in computing towards more distributed, localized, and specialized processing.", "mimetype": "text/plain", "start_char_idx": 5628, "end_char_idx": 8212, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb4207ee-40d6-477f-9ac6-176cb76faf72": {"__data__": {"id_": "bb4207ee-40d6-477f-9ac6-176cb76faf72", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b64da713-83fa-4a00-8f2c-18a4031349dd", "node_type": "4", "metadata": {}, "hash": "8c9c3899143a85e9e1efd655c65d9f6af518d6c482e4163ac0532d9c2606f394", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c7cc1d5-7410-4c0b-a6ee-4554049edda2", "node_type": "1", "metadata": {}, "hash": "d91c04b9cab65d320b2a867d68375b2fda7b9a99e21a444a28af493b78531767", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Platforms like Arduino Nano 33 BLE Sense and STM32 microcontrollers, coupled with frameworks like TensorFlow Lite for Microcontrollers, enable ML on these tiny devices. However, Tiny ML requires significant model optimization and quantization1\u00a0to fit within these constraints.\n\n1\u00a0**Quantization**: Process of reducing the numerical precision of ML model parameters to reduce memory footprint and computational demand.\n\nEach of these paradigms has its own strengths and is suited to different use cases:\n\n- Cloud ML remains essential for tasks requiring massive computational power or large-scale data analysis.\n- Edge ML is ideal for applications needing low-latency responses or local data processing in industrial or enterprise environments.\n- Mobile ML is suited for personalized, responsive applications on smartphones and tablets.\n- Tiny ML enables AI capabilities in small, power-efficient devices, expanding the reach of ML to new domains.\n\nThis progression reflects a broader trend in computing towards more distributed, localized, and specialized processing. The evolution is driven by the need for faster response times, improved privacy, reduced bandwidth usage, and the ability to operate in environments with limited or no connectivity, while also catering to the specific capabilities and constraints of different types of devices.\n\nFigure\u00a02.2\u00a0illustrates the key differences between Cloud ML, Edge ML, Mobile ML, and Tiny ML in terms of hardware, latency, connectivity, power requirements, and model complexity. As we move from Cloud to Edge to Tiny ML, we see a dramatic reduction in available resources, which presents significant challenges for deploying sophisticated machine learning models. This resource disparity becomes particularly apparent when attempting to deploy deep learning models on microcontrollers, the primary hardware platform for Tiny ML. These tiny devices have severely constrained memory and storage capacities, which are often insufficient for conventional deep learning models. We will learn to put these things into perspective in this chapter.\n\n![](https://mlsysbook.ai/contents/core/ml_systems/images/jpg/cloud_mobile_tiny_sizes.jpg \"Figure\u00a02.2: From cloud GPUs to microcontrollers: Navigating the memory and storage landscape across computing devices. Source: [@lin2023tiny]\")\n\nFigure\u00a02.2: From cloud GPUs to microcontrollers: Navigating the memory and storage landscape across computing devices. Source:\u00a0(Lin et al. 2023)", "mimetype": "text/plain", "start_char_idx": 7145, "end_char_idx": 9614, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a30dbdf8-fb3a-46a5-a2f4-ea6db1fe35a9": {"__data__": {"id_": "a30dbdf8-fb3a-46a5-a2f4-ea6db1fe35a9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a148e0bc-eb44-45b6-bbe3-bf490cf99ef2", "node_type": "4", "metadata": {}, "hash": "10c57712f6a497f1a57a5b98abd9671a52768ccf3fb023cb455c918e70d122c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nstudied by:\n  - \"[[study of complex systems 1]]\"\n---\n\nFailures that are hard to detect.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 91, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f3ec63f2-8bf9-44ae-b9ff-cc800686d3b8": {"__data__": {"id_": "f3ec63f2-8bf9-44ae-b9ff-cc800686d3b8", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6cf7e4f0-3d46-457b-85a5-634117271e27", "node_type": "4", "metadata": {}, "hash": "5590512aa1246649509b17394ef8ab4a6e7ecd900c7c8720c9a2f544be4f0896", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ncloseTo: \"[[control theory 1]]\"\n---\n\n**Systems theory**\u00a0is the\u00a0transdisciplinary1(#cite_note-1) study of\u00a0systems, i.e. cohesive groups of interrelated, interdependent components that can be\u00a0natural\u00a0or\u00a0artificial. Every system has causal boundaries, is influenced by its context, defined by its structure, function and role, and expressed through its relations with other systems. A system is \"more than the sum of its parts\" when it expresses\u00a0synergy\u00a0or\u00a0emergent behavior.2(#cite_note-2)\n\nChanging one component of a system may affect other components or the whole system. It may be possible to predict these changes in patterns of behavior. For systems that learn and adapt, the growth and the degree of\u00a0adaptation\u00a0depend upon how well the system is engaged with its environment and other contexts influencing its organization. Some systems support other systems, maintaining the other system to prevent failure. The goals of systems theory are to model a system's dynamics,\u00a0constraints, conditions, and relations; and to elucidate principles (such as purpose, measure, methods, tools) that can be discerned and applied to other systems at every level of nesting, and in a wide range of fields for achieving optimized\u00a0equifinality.3(#cite_note-3)\n\nGeneral systems theory is about developing broadly applicable concepts and principles, as opposed to concepts and principles specific to one domain of knowledge. It distinguishes dynamic or active systems from static or passive systems. Active systems are activity structures or components that interact in behaviours and processes or interrelate through formal contextual boundary conditions (attractors). Passive systems are structures and components that are being processed. For example, a computer program is passive when it is a file stored on the hard drive and active when it runs in memory.4(#cite_note-4) The field is related to\u00a0systems thinking, machine logic, and\u00a0systems engineering.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1949, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fc7872c0-94c3-453e-aa77-4c6c13f7b2a6": {"__data__": {"id_": "fc7872c0-94c3-453e-aa77-4c6c13f7b2a6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "52b6707f-676f-4ab8-a988-99ed25444dc6", "node_type": "4", "metadata": {}, "hash": "695b20e5de9d98a44ace5ac37800b895b4e62ea7c4303fef2911fe7e7c2f688f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nprincipleDesignFor: \"[[ML system 1]]\"\n---\n\nWays to drive ML System design.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 78, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9ff751c1-34e4-413e-beba-8dd89d2aa591": {"__data__": {"id_": "9ff751c1-34e4-413e-beba-8dd89d2aa591", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "37ab77dc-ecc0-4223-ba79-3c6b26d2d6c7", "node_type": "4", "metadata": {}, "hash": "6d47c16abde8d0a5baee05c3af572cbfbc5d07cec5489a3c0e3688c94c538855", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\ninstanceof: \"[[ML System failures 1]]\"\n---\n\nOne of ML System failures. Happens when the patterns that the model learned no longer apply. \n\nExample : in fraud detection, the purchase of one-way tickets was a potential sign of fraud, but with COVID, the pattern no longer applied. \n\nFrom Wikipedia, the free encyclopedia\n\nIn predictive analytics, data science, machine learning and related fields, **concept drift** or **drift** is an evolution of data that invalidates the data model. It happens when the statistical properties of the target variable, which the model is trying to predict, change over time in unforeseen ways. This causes problems because the predictions become less accurate as time passes. **Drift detection** and **drift adaptation** are of paramount importance in the fields that involve dynamically changing data and data models.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 854, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "50a60d26-7adf-4b86-8901-8a07560a68e6": {"__data__": {"id_": "50a60d26-7adf-4b86-8901-8a07560a68e6", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ad3a9d03-0edf-424d-9fbb-3ff28afd3904", "node_type": "4", "metadata": {}, "hash": "d6e89b2203c28ffc32cd7bddf0bc17d99b7978789ac6fc9a5b3616a6d4a3aee6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Predictive model decay\n\n\n\nIn machine learning and predictive analytics this drift phenomenon is called concept drift. In machine learning, a common element of a data model are the statistical properties, such as probability distribution of the actual data. If they deviate from the statistical properties of the training data set, then the learned predictions may become invalid, if the drift is not addressed.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 410, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8e57b94-0686-48d1-a2be-c51d09af03ce": {"__data__": {"id_": "f8e57b94-0686-48d1-a2be-c51d09af03ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cdd5533d-2a95-475d-8da6-3f2b996467cf", "node_type": "4", "metadata": {}, "hash": "f3621e3df22c43f37524a26d20b04d7370eb6ec1eccdd944797e649d3cec1cd1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e36b419e-407b-44c1-b12b-4c80e8401f26", "node_type": "1", "metadata": {}, "hash": "50d2fe0085932ee98663aae98b9c1ca5ede113a507b3d589271a03c478c50d33", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Data configuration decay\n\n\nAnother important area is software engineering, where three types of data drift affecting data fidelity may be recognized. Changes in the software environment (\"infrastructure drift\") may invalidate software infrastructure configuration. \"Structural drift\" happens when the data schema changes, which may invalidate databases. \"Semantic drift\" is changes in the meaning of data while the structure does not change. In many cases this may happen in complicated applications when many independent developers introduce changes without proper awareness of the effects of their changes in other areas of the software system.\n\nFor many application systems, the nature of data on which they operate are subject to changes for various reasons, e.g., due to changes in business model, system updates, or switching the platform on which the system operates.\n\nIn the case of cloud computing, infrastructure drift that may affect the applications running on cloud may be caused by the updates of cloud software.\n\nThere are several types of detrimental effects of data drift on data fidelity. Data corrosion is passing the drifted data into the system undetected. Data loss happens when valid data are ignored due to non-conformance with the applied schema. Squandering is the phenomenon when new data fields are introduced upstream the data processing pipeline, but somewhere downstream there data fields are absent.\n\n\"Data drift\" may refer to the phenomenon when database records fail to match the real-world data due to the changes in the latter over time. This is a common problem with databases involving people, such as customers, employees, citizens, residents, etc. Human data drift may be caused by unrecorded changes in personal data, such as place of residence or name, as well as due to errors during data input.\n\n\"Data drift\" may also refer to inconsistency of data elements between several replicas of a database. The reasons can be difficult to identify. A simple drift detection is to run checksum regularly. However the remedy may be not so easy.\n\nThe behavior of the customers in an online shop may change over time. For example, if weekly merchandise sales are to be predicted, and a predictive model has been developed that works satisfactorily. The model may use inputs such as the amount of money spent on advertising, promotions \"Promotion (marketing)\") being run, and other metrics that may affect sales. The model is likely to become less and less accurate over time \u2013 this is concept drift.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2530, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e36b419e-407b-44c1-b12b-4c80e8401f26": {"__data__": {"id_": "e36b419e-407b-44c1-b12b-4c80e8401f26", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cdd5533d-2a95-475d-8da6-3f2b996467cf", "node_type": "4", "metadata": {}, "hash": "f3621e3df22c43f37524a26d20b04d7370eb6ec1eccdd944797e649d3cec1cd1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8e57b94-0686-48d1-a2be-c51d09af03ce", "node_type": "1", "metadata": {}, "hash": "3925b662b462a1212c9efd84ce3b5b4ac411636ec3e3f8d97aa274c6c0f1e20d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ee180192-eed6-4ecc-8dce-a7ce32749b3e", "node_type": "1", "metadata": {}, "hash": "65ed19bdd425dbe72caf7217c9f47db282570f89bd6a3f8fbde3ed10002e8256", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This is a common problem with databases involving people, such as customers, employees, citizens, residents, etc. Human data drift may be caused by unrecorded changes in personal data, such as place of residence or name, as well as due to errors during data input.\n\n\"Data drift\" may also refer to inconsistency of data elements between several replicas of a database. The reasons can be difficult to identify. A simple drift detection is to run checksum regularly. However the remedy may be not so easy.\n\nThe behavior of the customers in an online shop may change over time. For example, if weekly merchandise sales are to be predicted, and a predictive model has been developed that works satisfactorily. The model may use inputs such as the amount of money spent on advertising, promotions \"Promotion (marketing)\") being run, and other metrics that may affect sales. The model is likely to become less and less accurate over time \u2013 this is concept drift. In the merchandise sales application, one reason for concept drift may be seasonality, which means that shopping behavior changes seasonally. Perhaps there will be higher sales in the winter holiday season than during the summer, for example. Concept drift generally occurs when the covariates that comprise the data set begin to explain the variation of your target set less accurately \u2014 there may be some confounding variables that have emerged, and that one simply cannot account for, which renders the model accuracy to progressively decrease with time. Generally, it is advised to perform health checks as part of the post-production analysis and to re-train the model with new assumptions upon signs of concept drift.\n\nTo prevent deterioration in prediction accuracy because of concept drift, _reactive_ and _tracking_ solutions can be adopted. Reactive solutions retrain the model in reaction to a triggering mechanism, such as a change-detection test, to explicitly detect concept drift as a change in the statistics of the data-generating process. When concept drift is detected, the current model is no longer up-to-date and must be replaced by a new one to restore prediction accuracy. A shortcoming of reactive approaches is that performance may decay until the change is detected. Tracking solutions seek to track the changes in the concept by continually updating the model. Methods for achieving this include online machine learning, frequent retraining on the most recently observed samples, and maintaining an ensemble of classifiers where one new classifier is trained on the most recent batch of examples and replaces the oldest classifier in the ensemble.", "mimetype": "text/plain", "start_char_idx": 1574, "end_char_idx": 4206, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ee180192-eed6-4ecc-8dce-a7ce32749b3e": {"__data__": {"id_": "ee180192-eed6-4ecc-8dce-a7ce32749b3e", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cdd5533d-2a95-475d-8da6-3f2b996467cf", "node_type": "4", "metadata": {}, "hash": "f3621e3df22c43f37524a26d20b04d7370eb6ec1eccdd944797e649d3cec1cd1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e36b419e-407b-44c1-b12b-4c80e8401f26", "node_type": "1", "metadata": {}, "hash": "50d2fe0085932ee98663aae98b9c1ca5ede113a507b3d589271a03c478c50d33", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "To prevent deterioration in prediction accuracy because of concept drift, _reactive_ and _tracking_ solutions can be adopted. Reactive solutions retrain the model in reaction to a triggering mechanism, such as a change-detection test, to explicitly detect concept drift as a change in the statistics of the data-generating process. When concept drift is detected, the current model is no longer up-to-date and must be replaced by a new one to restore prediction accuracy. A shortcoming of reactive approaches is that performance may decay until the change is detected. Tracking solutions seek to track the changes in the concept by continually updating the model. Methods for achieving this include online machine learning, frequent retraining on the most recently observed samples, and maintaining an ensemble of classifiers where one new classifier is trained on the most recent batch of examples and replaces the oldest classifier in the ensemble.\n\nContextual information, when available, can be used to better explain the causes of the concept drift: for instance, in the sales prediction application, concept drift might be compensated by adding information about the season to the model. By providing information about the time of the year, the rate of deterioration of your model is likely to decrease, but concept drift is unlikely to be eliminated altogether. This is because actual shopping behavior does not follow any static, finite model. New factors may arise at any time that influence shopping behavior, the influence of the known factors or their interactions may change.\n\nConcept drift cannot be avoided for complex phenomena that are not governed by fixed laws of nature. All processes that arise from human activity, such as socioeconomic processes, and biological processes are likely to experience concept drift. Therefore, periodic retraining, also known as refreshing, of any model is necessary.\n\n- Data stream mining\n- Data mining\n- Snyk, a company whose portfolio includes drift detection in software applications", "mimetype": "text/plain", "start_char_idx": 3256, "end_char_idx": 5295, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2815919f-0bcd-4dc6-9cb7-0b4bf4722d68": {"__data__": {"id_": "2815919f-0bcd-4dc6-9cb7-0b4bf4722d68", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4454233d-dd95-4d80-88ec-166178f0c08b", "node_type": "4", "metadata": {}, "hash": "06bb48326528fbfa6800a0b36faad8f10182bcb1801df4652fcc6e7d65520e8b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nhelpsAchieve: \"[[Transparency 1]]\"\n---\nLe mode de fonctionnement de SHAP est de\u00a0**d\u00e9composer le r\u00e9sultat d\u2019un mod\u00e8le par les sommes de l\u2019impact de chaque caract\u00e9ristique**. SHAP calcule une valeur qui repr\u00e9sente la contribution de chaque caract\u00e9ristique au r\u00e9sultat du mod\u00e8le. Ces valeurs peuvent \u00eatre utilis\u00e9es pour comprendre l\u2019importance de chaque caract\u00e9ristique et expliquer le r\u00e9sultat du mod\u00e8le \u00e0 un humain. Ceci apporte notamment une valeur ajout\u00e9e aux agences et aux \u00e9quipes qui rendent des comptes \u00e0 leurs clients ou leurs managers.\n\nSHAP poss\u00e8de plusieurs propri\u00e9t\u00e9s int\u00e9ressantes, comme sa\u00a0**neutralit\u00e9**\u00a0vis-\u00e0-vis des mod\u00e8les.\u00a0**Cela lui permet d\u2019\u00eatre utilis\u00e9 sur n\u2019importe quel mod\u00e8le d\u2019apprentissage**, de produire des explications coh\u00e9rentes et de g\u00e9rer les comportements complexes des mod\u00e8les (lorsque les caract\u00e9ristiques interagissent entre elles, par exemple).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 884, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1478ce3-c754-4c13-bf43-b9876ac533e5": {"__data__": {"id_": "b1478ce3-c754-4c13-bf43-b9876ac533e5", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bc1f74e7-0eb5-4e58-af60-a163f87576f6", "node_type": "4", "metadata": {}, "hash": "614aeaae92043c5da5d4d8e8f7e4f13314c0dcc02f15ebb432ef8e8076cc05e5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Pourquoi SHAP est-il utile ?\n\nSHAP comporte de nombreuses utilit\u00e9s pour les professionnels de la Data Science. Tout d\u2019abord, cette technique permet d\u2019expliquer les pr\u00e9dictions des mod\u00e8les de\u00a0Machine Learning\u00a0de mani\u00e8re compr\u00e9hensible aux humains.\u00a0**Gr\u00e2ce \u00e0 l\u2019attribution d\u2019une valeur \u00e0 chaque caract\u00e9ristique entr\u00e9e, il montre comment et dans quelle mesure chaque caract\u00e9ristique a contribu\u00e9 au r\u00e9sultat final de la pr\u00e9diction**. Ainsi, l\u2019\u00e9quipe peut comprendre comment le mod\u00e8le a pris sa d\u00e9cision et peut identifier les caract\u00e9ristiques les plus importantes.\n\nComme expliqu\u00e9 pr\u00e9c\u00e9demment, ce mod\u00e8le est dit agnostique (neutre). Il peut \u00eatre utilis\u00e9 avec n\u2019importe quel mod\u00e8le de Machine Learning. Vous n\u2019avez donc pas \u00e0 vous soucier de la structure du mod\u00e8le pour comprendre le r\u00e9sultat de la\u00a0**pr\u00e9diction avec SHAP**. En plus, ce mod\u00e8le est coh\u00e9rent. Vous pouvez donc faire confiance aux explications produites, peu importe le mod\u00e8le \u00e9tudi\u00e9.\n\nEnfin, SHAP est particuli\u00e8rement utile pour\u00a0**g\u00e9rer des comportements complexes**. Vous pouvez utiliser cette technique pour comprendre comment diff\u00e9rentes caract\u00e9ristiques affectent ensemble la pr\u00e9diction du mod\u00e8le.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1162, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7948129a-6e1f-42b6-a726-052d605f805b": {"__data__": {"id_": "7948129a-6e1f-42b6-a726-052d605f805b", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b980e946-2ece-4dd9-a638-1db25b7c478d", "node_type": "4", "metadata": {}, "hash": "dd6f3e363ecb8a7f77eee0d22dd9be90e2e4bba5becf6d1ec34b7914eacd5e7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\nsubclass of:\n  - \"[[systems theory 1]]\"\nis the study of: \"[[complex system]]\"\ntopic's main template:\n  - \"[[Template_Complex systems topics]]\"\n  - \"[[Template_Complex systems]]\"\nCommons category: Complex systems\nwikidata entity id: Q2995634\n---", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 248, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6a71afe-1a69-4536-a8f9-61b00c47c301": {"__data__": {"id_": "a6a71afe-1a69-4536-a8f9-61b00c47c301", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6cbd12d0-7410-4f07-b1aa-557340a9756c", "node_type": "4", "metadata": {}, "hash": "a7bcbbe4fe2f6a322291b679de3770a09f4c4bc7d5ee44a8069cacd304c18473", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "---\npartOf: \"[[Don Norman's principles of Interaction Design 1]]\"\nsafeGuardFor: \"[[Concept drift 1]]\"\n---\n\nAside from [[Don Norman's principles of Interaction Design 1]], this is a specific consideration when designing [[ML system 1]]. Key considerations : \n\n* where does AI exists ? \n* what data it uses ? \n* how it reaches its output ?", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 337, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "600e16a5-57e1-49ed-8b5f-1a89be1a9074": {"__data__": {"id_": "600e16a5-57e1-49ed-8b5f-1a89be1a9074", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f4afc87c-14f5-468f-a69b-87d506a6dcf5", "node_type": "4", "metadata": {}, "hash": "da79657a921424edaf31cdd5ce502063c008b25672604343cbad955571306feb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "How to provide transparency ?\n\n* Cite data sources and attributes \n* Give insight into importance of attributes\n* Provide basis for model output : \n\t* why did you do that ? \n\t* why not something else ? \n\n\nWe can use [[Local Interpretable Model-Agnostic Explanations (LIME) 1]]  or [[Shapley Additive Explanations (SHAP) 1]], or just inform the user on the interface.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 366, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"9def6900-c031-4257-af02-3ab70b17f9aa": {"node_ids": ["dd517c12-fd71-47ef-ac22-227fc739ba76"], "metadata": {}}, "ca4a34e8-7d86-4a3a-a0f5-7e3972b3adb7": {"node_ids": ["2c6cd875-1a42-4f63-aeb1-38b7b3f6a297"], "metadata": {}}, "1dfbb961-0631-41b4-9e43-3101d2b2be41": {"node_ids": ["4170752e-f9d7-4221-8fc8-e3f83bc8233e"], "metadata": {}}, "b64da713-83fa-4a00-8f2c-18a4031349dd": {"node_ids": ["6920cc05-6c06-4af8-b51e-1fcde5e8a683", "4106b283-11bb-4c31-84a7-1a732f5b6074", "eccb786f-57b7-4575-a142-284c5517fc8c", "8c7cc1d5-7410-4c0b-a6ee-4554049edda2", "bb4207ee-40d6-477f-9ac6-176cb76faf72"], "metadata": {}}, "a148e0bc-eb44-45b6-bbe3-bf490cf99ef2": {"node_ids": ["a30dbdf8-fb3a-46a5-a2f4-ea6db1fe35a9"], "metadata": {}}, "6cf7e4f0-3d46-457b-85a5-634117271e27": {"node_ids": ["f3ec63f2-8bf9-44ae-b9ff-cc800686d3b8"], "metadata": {}}, "52b6707f-676f-4ab8-a988-99ed25444dc6": {"node_ids": ["fc7872c0-94c3-453e-aa77-4c6c13f7b2a6"], "metadata": {}}, "37ab77dc-ecc0-4223-ba79-3c6b26d2d6c7": {"node_ids": ["9ff751c1-34e4-413e-beba-8dd89d2aa591"], "metadata": {}}, "ad3a9d03-0edf-424d-9fbb-3ff28afd3904": {"node_ids": ["50a60d26-7adf-4b86-8901-8a07560a68e6"], "metadata": {}}, "cdd5533d-2a95-475d-8da6-3f2b996467cf": {"node_ids": ["f8e57b94-0686-48d1-a2be-c51d09af03ce", "e36b419e-407b-44c1-b12b-4c80e8401f26", "ee180192-eed6-4ecc-8dce-a7ce32749b3e"], "metadata": {}}, "4454233d-dd95-4d80-88ec-166178f0c08b": {"node_ids": ["2815919f-0bcd-4dc6-9cb7-0b4bf4722d68"], "metadata": {}}, "bc1f74e7-0eb5-4e58-af60-a163f87576f6": {"node_ids": ["b1478ce3-c754-4c13-bf43-b9876ac533e5"], "metadata": {}}, "b980e946-2ece-4dd9-a638-1db25b7c478d": {"node_ids": ["7948129a-6e1f-42b6-a726-052d605f805b"], "metadata": {}}, "6cbd12d0-7410-4f07-b1aa-557340a9756c": {"node_ids": ["a6a71afe-1a69-4536-a8f9-61b00c47c301"], "metadata": {}}, "f4afc87c-14f5-468f-a69b-87d506a6dcf5": {"node_ids": ["600e16a5-57e1-49ed-8b5f-1a89be1a9074"], "metadata": {}}}}